
obj1:= a*b+a*c+d;
@factorise!(%){b,c};
tst1:= (b+c)*a+d-@(obj1);
@collect_terms!(%);
@assert(tst1);

obj2:= 2*a+b*a;
@factorise!(%){b};
tst2:= (2+b)*a-@(obj2);
@collect_terms!(%);
@assert(tst2);

obj3:= 3*a*b + 5*c*b;
@factorise!(%){a,c};
tst3:= (3 a + 5 c) b - @(obj3);
@collect_terms!(%);
@assert(tst3);

# Test 4-6: factor_out
#
@reset.
obj4:= a b + a c e + a d - a:
@factor_out!(%){a};
tst4:= a ( b + c e + d - 1 ) - @(obj4);
@collect_terms!(%);
@assert(tst4);

@reset.
obj5:= 3 a b + 2 a c e + 5 a c + 7 e f - 2 c e + c d - a d + a - c:
@factor_out!(%){a,c};
@factor_out!(%){a,c};
tst5:=  a * c * (2 * e + 5) + c * ( - 2 * e + d - 1) + a * (3 * b - d + 1) + 7 * e * f - @(obj5);
@collect_terms!(%);
@assert(tst5);

@reset.
{a,b,m,n,p,q}::Indices.
obj6:= A_{m n} C_{m n} D_{p q} + A_{p m} C_{m n} D_{n q} + A_{m n} C_{m n} E_{p q} Q;
@factor_out!(%){ A_{a b}, C_{a b} };
