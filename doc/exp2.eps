%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: /home/kasper/tmp/kt_temp/kt_temp_makefig/makefig.dvi
%%BoundingBox: 80 572 300 721
%%DocumentFonts: CMR10 CMMI10 CMMI7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E
%+ /home/kasper/tmp/kt_temp/kt_temp_makefig/makefig.dvi -o exp2.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2006.12.11:1148
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC194F782420BB447DE705EAE7963391B36647C8B3796E8E8774CD38D
675A89E8D077644F37FBFE9EB36C5B4455A94D61E2EC58C4544B2714F8B66FF5
D09FF25507481406F93BD74C2F14785C9AFFC6458E10A133E0ECD17301B2B5DF
DE0C0D73DED3F4BE21027581FC25B49D6B1F1934F8745C4CE9610BE5A10F91C3
561C994E4BCD46A084D51E268092BEA0AB544F91C9CA2692A02575863E04350D
23051121C2B09186AE02C550040C09905EBFAAB4859901E0D1349E104862C122
65A2855C94549313EA44C9D9F1B3EB99D644FA8FE08D5F40A506639B0344B894
882ED4C0BBCFE4A30B6DA93BE0DCA9671E984F279295B45C8DED7D77BA7874AE
8B21F1148B253610333230100049EEBB1D4D58E17059C374AC2AF9CEE11B4D59
A7281AB04644DE042145245F04DE6CB5413889575CD415C721A7C18B3C3FE177
2FD7256E2E686938E36AC765FAF48D83C561C2E25807CDA6087E4A3B1E82216B
A3609E28E6B58E3F36CB36315314A72CC7EC4ED8CF2E6761EC6409A74339CAF5
D148FFFAF620CE77
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 26 /rho put
dup 32 /psi put
dup 70 /F put
dup 120 /x put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667C419C4021DA92976C7550A196C257FC2124FAD5E653AFE71A185EEB
32D003E13145A2B8230CFA65B8B8C55DD032F84307FE53FDB700A58C7546787D
F306D3D7E14C9D301B79DD47D3141BACD987E3690D86AA69CF7722AE378E8106
F3B49F218B58AB401B1788AED031850B2079110EA4525D966384CF6A866894D5
FCE658FEDD8BB4F5AF7DC0C604BCCD85B7B4DD35403C23FE5ADC9EB8DAEC97F9
13E08ACDB69680FEAC82AC424C125AD328E3855A52124AAF3C324D93EBE9D9AD
1AE1B26E8C743773A084881C44536F54945D8168D8E40C4CA01914744E49FAE6
A27ABF29EA34543B8DEEB025DCD05DBC3BCB8C107836E2E97F863E543FC13BB9
481424298C5AB72CC44DAE649D4A16224352E91DA24A564DB9370A34155495EF
0EB287BE20162E9DB950508E4FB8C5CFE5B6A062D3016E2E1A15E03F915C8025
5843D5316A69BA43C57AA2A13991ED11D6931378A73F95FE3797BA7977E0FADF
F95AF97E568E59CCEF1036DE58BA2D7629F058E39CA08E94B2B08D202603F2A2
63E01E2A74F2D18DFAE6DC8BFA435CA36E98EE1F6E5B92D449AFBCF623404F16
06B5D0E252F57A667A7E17600492A31A1BC8A03ABCE2F8FB82F38728550FD88E
DEA92F6BD0B42BD28704228DD83DF9CBC64511CEECEDF681E689DC9C5B141741
0244E24785B7B13C298F7184F0F386105DD3FCD7AF22F27AEE2DFBA7185C6A26
7C108B92357FE952CFDBCB02F45959E3D0F730E75E8A2867DD9D4FCA3987FDC4
C062FFD0B4525D1E45261282D83CE455AF1EA5098E5BA1F4053EDA544D1B3045
74E741AC7D61C398361958DFF4E3F89160A6FC6E4073DA3D98E8260B1F83952E
C7AE56387BF58B0956CBCFDD0BCE334E9A2AC8EDA303679218B2192B28CA3A54
6E07FFFB11FEB487F472F3BA46D45FB57E2875F40994041BCB961E08D3DD9C26
98DD85308B7C1059B032D56DFDC2EDA51ACF55F6050BF6A6C85A4AD188B68C1B
5C69B21A58076CF11C4D54E4A0FB814E7B0AF87AC3D7DD4FC210997C639E6EA7
30B3D4D98343685C5022835F83BB3723BF9EDB784B9C27B3E061F80CA99F2ED7
BFAA1514BEDAF44D7739747033811C07E6F26F74EDC3F52CA75AC4CB45D98D65
DF1D012F72033A5426C6346003C27A70B937D5CD9124FA6C8BFCC506C6043319
7F97A41A0E56D28DDEC3DFE291378A182CC97CEFFC995544B4789BC55712FD70
CDA866003EF8BC18E5D768F0F28E24C4DC790DF7BC60688C2C034A80031789E9
BDF8293E12533F0D027CFC6BD9ACD7FD8DC3113D7E69430F31A2D2141306EC6D
C40898CDCF1FEA68BBEE05A44899317003EAF3B392D21DA573792C658F6197B2
9A9AF98D38F447ED02155258DA18568C5D8A8DF457539C071F5C441B46B6880B
95D16DD7AD26B90992996E17C2518AEEEC158794B33D9C67BD42D3A2769FD0B0
38BA341767B4A776094DAA95CAE2E22206167901F4CF9C1F1D12E4F4FE2CF1E5
73EFF0D3B67ED7C2BA3D48D22E185B2D49BFF2B9317FAEEA390A56874C56281A
AA894B305C8F4EC9C068B687DC999928815C9B6A15E286734E36C810FF7F28F2
7EF1CE4F0D8E9E2DEDDBCDD6ED9B23B26E84D397277D2E1AE6D5941D5837DD63
D852964583EB15AD46B8003E587AE79C46A0B6CFFEF307CA0737DE04707C94D1
5C1AA6D885D1AB3A3D289CA8D67F250A2B4B56CF0FE10D0AC8C78D5D85AFD3CA
97353AFB3750E645E7BE25957720365488B7E24F51F38DE612EEC02DB6A77B77
A51DDC9A4A3ADB8C4013638FD29C1320E6A8689AF95891A648EF1411E5C00A64
9F86FBDDD8771832F0FF485D9C1EE01C18F362E45716D38CE66648E8164C1579
BE0CBFD457660E803AE6437B0F73A4FCDD1D27671FC3187E8FB62CAA700BCFEE
3CF4D2B21AEB2783366A43C7139DD1962B082CAC832939CD5B3A59897E932C66
82BADB43A097341294BEC25F3A49D4AE220167B1E9592131748ADFB765D417B9
9497BC86C8371BFDB710BB5C0BF8F420A29E8227E58CBE5D639299F0960C3CD0
4EB3D7B804A687F005773EFAE75DA459F27DB446CFEB5F5B809EB5736F05828A
0B8F45D88551DBA6A6EE56AC0B6BCC03E804ED78CBD811D84D59ACA5A4A48187
6FD975A3311F2693C7460AFE73C20B8C83887835F06D664FD3D796BD64E4C822
545FBCA53D881EA8989B963808F984A4C7DB63A430EE68142228E86821290ED7
508EC2EB07929B488E718188CBA54E14C6525209
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEE09555C11E6E295
71B219B380EE9E5BB17AD84B4E8AED35880BD88E5AC7D9FE25C46889CD093396
F0E34A62F93E64C8E7975CFD617121244AB09FF9A4F73F8166197D0CDE2EEBB3
81AB9BD8329579C2122368F56DEB89BA6E42C5D9E20F2789CC4A89E4AD9B877F
8A0ACB84936F109D86211169257C19756A97E682601F4D1E7ED950A351C14DAC
4BEA7FB0E58FB5AEB55BC09B1253748B61B4E00C448F263458BF958D3986BF18
9636037E95FB425AAC96FCED5B4C766F93041FAA0DBB196B0A220B8E3A9FCA6E
B4F5C0C775C25AFF4F5099CD3A2FA59ACA735718F8E90B351B015320794A89E8
4C34F32B465E201008CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A93386861
828F6251F206B9131C951D1ED4364A9CCE507E2959A1DA04A777B592888D38ED
E68FFB3EFE83870BA8E04B88C9EEEB2DB80D4D07B52CE914D9DADF825A5301AC
C64063909D6C1DC84C274C90004F41A1FAFD450805C5DD2A8E4F4C23E114246F
C103EB63B58F33E44DD04F6367E04C3CBB3400BA3C1943B874CFB7DBF6A3EB5A
3F665C5A98F578A03948821E40D1608FB70C5915CA0DE369A0D7112BFF6CAE56
CB9BF699DAF3859F2B46DF97AE05915E791F1CE849154C53C4403EFD6F1A44EF
78C167190F3326BA35B2A0F95CD03492DBA2903489ABB6B2EB9F977F3F4D690B
31E8F6E32F83D91F721ABD116A40698F26610853E7FD075478979BEF42166C1B
312E8C20CB3F080B08A69416DA402D336C627BABC4737FC72F8F4F6BB7D73551
EE33D3CEA9052546399CE5FF4996968D1EF09B7C19995C083E727D2398021CAE
6B824B074160730AE1D61010FB6167E8AC42145BCE800A58D221004F6B953F48
B4A99CBF85F829F34F76B02D02D956F2D9710B38FE827FE961A3BA3E78F64ECD
DADF68975D97F94EA8A698A5C6C48DFFF960EE628E8515535F59220FCB5E7EBA
98EFC03380413965B0498C169ECE75E7981C6BFBD64D544B919570F297C004CE
0C3B1A7E5D3C322887DDB7AA315551E09616F5D1E4FF1E7506494F362B124790
B10F52C94E6609CB9ADAEFE74528C271FCA5710E67DB9A31A4EE5E8B068DC248
F98C0675DCF2EC93227746654ED73ED27B057EDD4280D406B7201ACE79B44665
3B433E622C7260EC370B378BA1B72470FD7A76128EF6906B32D2B9FB28B1B955
6C528D23962F76D5E96E6D46864CCE7F859C7FC333EE98134E1C275D017B3EC5
E6ACB222D33909711D32D380BCFE49B06461B8B9D06A47C601860487F717AA6C
EA7C03055A933CAA161CE580F3450B0BDBA1789FBF48822B33BFC5FAD73A5F02
7EDF4AFB79B876CA70C352F1711466C1C680D7B512B75A5719B5C85CF6F2FB9A
6F974915BA9F3DBB83596C2A63EC5D2AF5209E601909E3FD7466D32533A8D4CD
69B5619E01C6F9F2C6E16AA685CBB41EF8C185095565C48E21AF24A1018AD349
63A4B5CF7F80881B6D35808FFA6C1451E5168F7BBE77E25C3A1C2E407EFAFDBB
4F917C49D468A22DDECEC9A3A1FF3D279BB3D9BC351FAAC787C547EB9DB5B49D
0E6E89F4156AD627997804ECD5547A106EFC52EA95952F3B2F3653648E14B6A2
0EFE133E059B49EF76D8B0B9A6734B160AA3D4EE66DCEE0CCF3A559A1F5B9A17
BEFFE89C9AC2EA49668C017472AEFA0143072B9762D554AF4AE52A703DDE0F42
8E156F823103EDB2D0B475415FCBF7E031B8363C9C318D396D77100C0F05DE27
A57F813EC8FC949A6409A837245C5AE75F47120F9ABF8A144B7194615983703C
8530C9A661EEC72E94D525C176FB0CB2E753316267FB9628C583FB1E8A917929
BE657AE4CAD788A304D20E3B8BE0B8AB2D43BDA040B2ADF4B52C9D7AEC628D61
29CCE50223F113D55423532EAFE56F39264A3FE995DCF052DB9A5B81D518C916
4CFC640AD12970EEF33C45A8FE6F12D0A65B5C31D31B9626F4D9128494DB3198
C2F6B35AAF020C4FE30946D4DC525DC3C8C99BB3D99B5BA0F1C30E28651C635F
3630C72C015B53B0AD16BCE319499FFEA5CA909497591B58EB970719C9B9ECCA
190D4B57DFD7FB841247C96750840D8E38B4D15D13BF0A1695015C0942B9B6C8
9780AAE344387B2B303F54C4CC0A03739531DB46E00C408CD0081FA59047DF2C
884EA1704F9A131C580B7F9F7005974794F9F0D67E5D99156DD610B5B5E99111
EBFFE160EAFB50D998220BD0436A6EB83787F8DBDD0453195BA81597051FFFC5
15190CE23F15CD662B3C55BC6F6080C3E8CCDACD951173A36C9EEDDEA0DDAD59
9591AE0FE218A738BEFE329C4FEFA47B402A2A36ED0204CD49C25C4D9C614F2F
7BFCA7780AA6EDE2748AD6D7F44D38D94B5261F55C482CEE244542BFF2E0C33C
A7C5E36BFF9B970A99C766B423F84A7220A882B03A55389E008196EB1CE9C217
7CE9908868E87C2E249BA31169FABBC8DBE26275AB3604499B9E636C2E0EB879
BAEF7336259124FE3BFF7722D0014ED7FBDDAB47E102B0C252C1AE5048C75A0A
9E833BA3A779D8EE03050402C2FD34249E6129536DC5BCEF2FB6F6A121593799
37D5027D95A75B42C380C9F236E2F98D7F4DB8ACFFEE09DFA0A107DC4A6FB537
9EA4229F0BC07695D1472A1C0FAD646CBCB92C4A76EFA91DA6725EBACB3FB9B5
FC788E53EB917A2FC558AF7F53AF3CED7EAD84B0B997ADD1585CBD2E9E41B87D
6097F74D8F06A18302A349B92AB855888C0ECFCD9CB1A1440BBE58C4EF9160D0
0B78AF901A8ADAD550ECE4F393AA07D85F786090BC217FC59744577996EE8571
9E4820752F8EAC0CB795047DD76A4CBDBBDDB48350FAF52323FB172E6FEED926
A361B77ABFA6EFB73851F9F802CCEB2798746B2EC8B43FB801E0553D034A0132
3905BA38C3124DC5E0E9C51045015817AD5FC750924158CEF440054FADB0FC02
C3E330F90CD86847AA59C94F5EA4626E10AF33CBADC593764BFE51E712968F6C
B63B997B6A4FB61F8F6220E18735647506FA4A0AD227A69DCE4AB979753BEA1A
A3590F7BFC682D1E2509995E5F567549E36FE6675C47749AAD14CB2112854FE6
59FE56D9C4DFC06B21B6F7DD421CAE134A29A061DCD4490F81F71D0780BDE07B
0920F2543D775054BCA2BF888CBD0B08E6CF8B099BBBD91146C4577959FEB436
3413979503B3562A50278E6B43A87AC37C2B68A351DBC54936B9152B7D56A526
691F507C42E94024409306790E89070C4D0CA5FD98018BF2CD734D30AD2D2AE5
50E9580F7B3A028C1F260D5A60F03EFEA40DA432FE47125AD29DD6778F58F0EF
B37DE5C14DDF2789585D1FC076490EB83C4B864849C42BEBF86BA27C9BAC2F23
ABC7D954A13F5FB724E4B2189FEC5F4650EEA7A797E8B031C5CC8AC1C5819185
3595BA9A366AE3569DC8C95164978DE77FAD5F770CD87A121A2BAAD175AE1547
60930A498AC81BAB2BB25F4CC1C300823ECAD33FC04EC1A4A665BCE6C0420DD6
2F1A030DA0B1AFF0DD3443EC28BD6E47524FFFC53A40757609505802BCE97D01
30F10E38C726D5554EE81B8C47F78DB35C282ED1696DDD300531AF4E11F8926C
2EFF8FA61826ACC189B2902AEB87CB48D352B4B10423FD06A91FB953672CA8D3
D4C517E3ED112B41434F715364CFDE6C849CC26CA8AD724E28EDF71DA21EC234
B9641433564CD8F816630AC04EA580B5DBF4B0BD56E69D65293E8DAFFE140911
65003FF43DB40A9AFE05690FD3BC6CD7C997DFB450DBFD29734D4856711934C9
EFA0C0EF473BE66B036A32D5F10B589ACE6FBBA0D0574DE6539DE1A4E62E1C3E
E2507D3B7F6D8ED3169CE5461B9C1EFCE26FF600D8B46836DF30FF74D0524A88
D6BDD9D996B4D3963DBC949551933A87A872BE6CE51184DF5657ECF24367EB14
A7814BEDDC85137F40B1A8F7245584DAA752B0C26BD1B160DD331FB94B2027EA
D470CB8705F1BCF75375E46CA5E8C105A5483DDB620D225D916B496058A1B307
9120D9199CE413BE4941364C0F3ADA50AE291A517B3F95D67761BE18033554AB
1351A1F87DE1989437A2F775A894EEEE906DB9F946CE8D0B6EAE3DFB4A79BAF2
AB27DFCF79FB1175F1C0072A663A10CEE197E6B191DAA644A4A0BCFB87EAF4D2
D158EB86B5183EF7608147EFB2F1CB2DCB0051F2AE6585AF4736679ECDE5B502
CD2DEA962727A6994C04AA09C6716BF5B3713BF8DE70875670DA5A1CAA9B2159
ABCDA4503F12060F81B289B6D19708A31A7FA8BDAEB65F1D7543505D26CB3E8A
F056FC84FCB45C6895EE4A34BDC1949E7E124F1E1FF63D03970CAE45A26B204B
45EBA6BFDF5E0F11FCF8724AB4B201C6F2768C5AACC6309F2D135D9969C0714E
E51DF14121BAC17618A4792F697E1B6C3AD3485F0927FDD53FD0567E56D7A152
DE6A8BFF2A941D6156EFAAAC7170A665CF57A0B9FD242829349F267EAB9C2296
4DB761395FFBD75DE58AB7481A561CEE5372E454D903ECEC26A777B5C4AC5227
C0B6E5FB982C1BD627339C4990FD414588D05A5FAA441A3FB35A3BA363761EAF
D4AB19C7874CD87267E59394D0B09CB36F0F9CBF0573E411FCF0ECC81388AB66
7BA3759B86B4DACDE1ECD71A49B76E3BDB415361B2312BB2C72D850BBF35AF4F
8F5BF0A277A7D0FD46DC3054B81DBD44C99E8002A43A0A354B78EDD192FF1E2E
8FC01D71641733D8241EC4E0ABE635C97C8133304F094B5BE9A47F13B7489CF5
42F18F2D72C59DCFE3A4A26331AA8EEBBC26D41CCF34BD10850D6EC8729C2911
55394002DF4820BC2CEBE107AD66C7F1EB1B7B887C06F37A5A2B1979D4BF01B2
4EC9ED746D1D904C58C59F8B783DE3630B44905C93780CD0CE3005D77E2DFA40
3B8DF0E0CDDA7AEDB5E495AF1B9ED2B928BA26A47076AEDC234F3D659CCB0534
02BE5739BC3B73A58C600714CC593D66508A9716EC6338EBD103E0799A168E15
98C3311F473F8FBDF5630F726AEC51265AFEBB6C2412082BAA93504247199BC1
8FF8E99410D87D06F90ABEE08C4E4CB26EB6F9CEEBF42DA2C6778E0A6A7FACCD
CC8CE175CCDE5AA28061DA2B2BB6664C9DEB4423F6EF3B2A23F00B9B4F197022
29E4DA035A3BFD78AF62F864CE839EBA53754A3A1589C8E781EC0785E1196AF1
0060D953C6DDED44CFE8ED5340D198941ED0F8D8259FEC912B70FBF47BB19E92
F80B5D829B1AC466776C1182BF76D23CEB0FA832CBE0653E03850C48F9F428AB
16CD80233322C1063127B42E16F395D92132CAE185D7230711171634B4FD4418
7DD4F3CC51046D3CA312EDCC6784C9843E6682E9D9EC3C8EA8C98B5E2626F227
C744E7C1B284EE0B75C913518C312CEC2BF5F9EEB138C6587422BA711462123D
3346589E4D4081EFEC2E86AF9DE6B7B824B91E95A345F3D6DF3E929676E667C6
7644C7ED5B191944C024193614441D7E1428343BD3FE7EA79C206350BABDF3E1
88A73FF53D0F25F0D4BB80AB45C84A5823012456C44366E64E7A8DA88875D92B
33E6C70BB9A1A19B451587608AFCEDBCE78C59739D4D29B4DAD9824C47D86634
2F32D68D2918D023FA6BBA0F2CFDDB7B6A6758D71F2AB38A89F3ABA72F23AA33
AF8AAB4AE56C6A32BEAF8B0A54530721E6D36352988B504A7B8902AFEC0761BB
B1C1A154F598A52A0C35D8725FB0EF2750BCCA83980108E91D070124CA4043B3
0938932C9482342BB0713631224289265487E5588D51D0C1A0D5CF9812578DFC
4BBD2FEAEE32EF988716B638D3547870BFC23765295F342416A8BE03F7CF0F41
66C055B94B80DB53E00B705CEA4BF36EBC4F6C61E20A33F2C78DFCF955E45B12
7EB7BC582E6986731F18FA1469C00C05B78C7E5B119EC6E4673B9D874A0B0111
57B5B15EB0285848C2D61C87901517AA22568D2E4C3F40514C7F707B65747D37
00E1D8EB7FA348F9AED575F35C8BBD095658A26D0CF5C45E258F4BAF6D8A9BF1
391AEBB26B938245F37772515EA6BD760B72456657B0DA0AFC49C4D652F7F641
C99AB170CB821BD32A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600
(/home/kasper/tmp/kt_temp/kt_temp_makefig/makefig.dvi)
@start /Fa 145[41 110[{}1 58.1154 /CMMI7 rf /Fb 135[47
49[53 37[54 5[43 2[41 50 48 21[{}7 83.022 /CMMI10 rf
/Fc 139[32 33 33 1[46 42 46 69 23 2[23 1[42 25 37 46
37 1[42 13[46 2[57 68[48 11[{}18 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 166 1181 a
 /PSfrag where{pop(int)[[0(Bl)1 0]](prod)[[1(Bl)1 0]](diff)[[2(Bl)1
0]](psi)[[3(Bl)1 0]](F)[[4(Bl)1 0]](mu)[[5(Bl)1 0]](nu)[[6(Bl)1 0]](rho)[[7(Bl)1
0]](lam)[[8(Bl)1 0]](x)[[9(Bl)1 0]]10 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 166 1181 a @beginspecial
0 @llx 0 @lly 213 @urx 153 @ury 1417 @rhi @setspecial
%%BeginDocument: exp1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: exp1.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5-alpha7
%%CreationDate: Sun Jul 30 23:11:05 2006
%%BoundingBox: 0 0 213 153
%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 153 moveto 0 0 lineto 213 0 lineto 213 153 lineto closepath clip newpath
-101.1 312.8 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
n 4410 2790 m
 3825 2925 l gs col0 s gr 
% Polyline
n 4410 2790 m
 4905 2925 l gs col0 s gr 
% Polyline
n 3690 3240 m
 3150 3375 l gs col0 s gr 
% Polyline
n 3690 3240 m
 4140 3375 l gs col0 s gr 
% Polyline
n 3015 3645 m
 2655 3825 l gs col0 s gr 
% Polyline
n 3015 3645 m
 3465 3825 l gs col0 s gr 
% Polyline
n 2610 4140 m
 3015 4275 l gs col0 s gr 
% Polyline
n 2115 4590 m
 2115 4770 l gs col0 s gr 
% Polyline
n 2115 4590 m
 1755 4770 l gs col0 s gr 
% Polyline
n 2115 4590 m
 2520 4770 l gs col0 s gr 
% Polyline
n 3015 4590 m
 3015 4770 l gs col0 s gr 
% Polyline
n 4095 3690 m
 4095 3870 l gs col0 s gr 
% Polyline
n 2610 4140 m
 2160 4275 l gs col0 s gr 
/Times-Roman ff 190.50 scf sf
3600 3150 m
gs 1 -1 sc (prod) col0 sh gr
/Times-Roman ff 190.50 scf sf
4050 3600 m
gs 1 -1 sc (psi) col0 sh gr
/Times-Roman ff 190.50 scf sf
4860 3150 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 190.50 scf sf
2970 3600 m
gs 1 -1 sc (diff) col0 sh gr
/Times-Roman ff 190.50 scf sf
2070 4500 m
gs 1 -1 sc (F) col0 sh gr
/Times-Roman ff 190.50 scf sf
1620 4950 m
gs 1 -1 sc (mu) col0 sh gr
/Times-Roman ff 190.50 scf sf
2070 4950 m
gs 1 -1 sc (nu) col0 sh gr
/Times-Roman ff 190.50 scf sf
2430 4950 m
gs 1 -1 sc (rho) col0 sh gr
/Times-Roman ff 190.50 scf sf
2970 4500 m
gs 1 -1 sc (psi) col0 sh gr
/Times-Roman ff 190.50 scf sf
2430 4050 m
gs 1 -1 sc (prod) col0 sh gr
/Times-Roman ff 190.50 scf sf
2970 4950 m
gs 1 -1 sc (mu) col0 sh gr
/Times-Roman ff 190.50 scf sf
4050 4050 m
gs 1 -1 sc (nu) col0 sh gr
/Times-Roman ff 190.50 scf sf
4320 2700 m
gs 1 -1 sc (int) col0 sh gr
/Times-Roman ff 190.50 scf sf
3375 4050 m
gs 1 -1 sc (lam) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial 166 1181 a
 /End PSfrag
 166 1181 a 166 94 a
 /Hide PSfrag
 166 94 a
-574 152 a Fc(PSfrag)26 b(replacemen)n(ts)p -574 182
741 4 v 166 185 a
 /Unhide PSfrag
 166 185 a 67 284 a
  {
 67 284 a Fc(in)n(t)67
284 y
  } 0/Place PSfrag
 67 284 a -3 368 a
  {
 -3 368 a Fc(pro)r(d)-3 368 y
  } 1/Place PSfrag

-3 368 a 48 484 a
  {
 48 484 a Fc(di\013)48 484 y
  } 2/Place PSfrag
 48 484
a 109 567 a
  {
 109 567 a Fb( )109 567 y
  } 3/Place PSfrag
 109 567 a 101 683
a
  {
 101 683 a Fb(F)101 683 y
  } 4/Place PSfrag
 101 683 a 116 766 a
  {
 116 766
a Fb(\026)116 766 y
  } 5/Place PSfrag
 116 766 a 120 882 a
  {
 120 882 a Fb(\027)120
882 y
  } 6/Place PSfrag
 120 882 a 123 966 a
  {
 123 966 a Fb(\032)123 966 y
  } 7/Place PSfrag

123 966 a 118 1081 a
  {
 118 1081 a Fb(\025)118 1081 y
  } 8/Place PSfrag
 118
1081 a 69 1181 a
  {
 69 1181 a -42 w Fc(d)73 1151 y Fa(n)119
1181 y Fb(x)69 1181 y
  } 9/Place PSfrag
 69 1181 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
